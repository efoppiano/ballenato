buscar_principal,(arch),ordenar,/2/1/linea = arch.readline(),/2/2/while linea and not es_invocacion_principal(linea):,/4/3/linea = arch.readline(),/2/4/if linea:,/4/5/nombre_funcion = linea[:linea.index("(")],/4/6/devolver = nombre_funcion,/2/7/else:,/4/8/devolver = False,/2/9/arch.seek(0),/2/10/return devolver
calcular_indentacion,(linea),generar_archivos_csv,/2/1/i = 0,/2/2/while linea[i] == " ":,/4/3/i += 1,/2/4/return i
copiar_funcion,(funcion/c/ arch/c/ arch_salida/c/ es_main = False),ordenar,/2/1/linea = arch.readline(),/2/3/while linea != funcion:,/4/4/linea = arch.readline(),/2/5/if es_main:,/4/6/def_funcion_formateada = "def " + MARCADOR_PRINC + linea[4:],/4/7/arch_salida.write(def_funcion_formateada),/2/8/else:,/4/9/arch_salida.write(linea),/2/10/linea = arch.readline(),/2/11/while linea and not termino_funcion(linea):,/4/12/if linea.lstrip(" ") != "\n":,/6/13/guardar_linea(linea/c/ arch_salida),/4/14/linea = arch.readline(),/2/15/arch.seek(0)
eliminar_cadenas,(comilla/c/ linea),generar_archivos_csv,/2/1/empezo_cadena = False,/2/2/linea_nueva = "",/2/3/for caracter in linea:,/4/6/if caracter == comilla:,/6/7/empezo_cadena = not empezo_cadena,/4/8/elif not empezo_cadena:,/6/9/linea_nueva += caracter,/2/10/return linea_nueva
eliminar_comentario_linea,(linea),generar_archivos_csv,/2/1/linea_sin_cadenas = eliminar_cadenas("'"/c/ linea),/2/2/linea_sin_cadenas = eliminar_cadenas('"'/c/ linea),/2/3/if "#" in linea_sin_cadenas:,/4/4/devolver = linea[:linea_sin_cadenas.find("#")],/2/5/else:,/4/6/devolver = linea,/2/7/return devolver
empieza_comentario_multilinea,(linea),generar_archivos_csv,/2/1/if linea.lstrip(" ").startswith(COMILLAS_DOBLES):,/4/2/devolver = True,/2/3/else:,/4/4/devolver = False,/2/5/return devolver
empieza_funcion,(linea),generar_archivos_csv,/2/1/if linea.startswith("def "):,/4/2/devolver = True,/2/3/else:,/4/4/devolver = False,/2/5/return devolver
es_instruccion,(linea),generar_archivos_csv,/2/1/linea = linea.lstrip(" "),/2/2/if linea.startswith(COMILLAS_DOBLES) or linea.startswith("#"):,/4/3/devolver = False,/2/4/else:,/4/5/devolver = True,/2/6/return devolver
es_invocacion_principal,(linea),ordenar,/2/1/if "(" in linea and not " " in linea[:linea.find("(")]:,/4/2/devolver = True,/2/3/else:,/4/4/devolver = False,/2/5/return devolver
generar_dir,(dir),ordenar,/2/1/nombre_python = os.path.basename(dir),/2/2/nombre_txt = nombre_python.replace(".py"/c/ ".txt"),/2/3/dir_arch = os.path.join(CARPETA_FUNCIONES_ORDENADAS/c/ nombre_txt),/2/4/return dir_arch
generar_lista_funciones,(arch_programas),lista_funciones,/2/1/arch_programas.seek(0),/2/2/arch_funciones = open("funciones_por_modulo.csv"/c/ "w"),/2/3/dir_programa_original = arch_programas.readline().rstrip(),/2/4/while dir_programa_original:,/4/5/dir_programa = ordenar.generar_dir(dir_programa_original),/4/6/guardar_lista_funciones(dir_programa/c/ arch_funciones),/4/7/dir_programa_original = arch_programas.readline().rstrip(),/2/8/arch_funciones.close()
generar_lista_funciones_ordenada,(arch),ordenar,/2/1/linea = arch.readline(),/2/2/l_funciones = [],/2/3/while linea:,/6/4/if linea.startswith("def "):,/8/5/l_funciones.append(linea),/6/6/linea = arch.readline(),/2/7/l_funciones.sort(key = str.lower),/2/8/arch.seek(0),/2/9/return l_funciones
generar_lista_imports,(arch_programas),manejo_imports,/2/1/arch_programas.seek(0),/2/2/l_modulos = generar_lista_modulos(arch_programas),/2/3/arch_imports = open("imports.csv"/c/ "w"),/2/4/dir_programa_original = arch_programas.readline().rstrip(),/2/5/while dir_programa_original:,/4/6/guardar_imports_modulo(dir_programa_original/c/ arch_imports/c/ l_modulos),/4/7/dir_programa_original = arch_programas.readline().rstrip(),/2/8/arch_imports.close()
generar_lista_modulos,(arch_programas),manejo_imports,/2/1/linea = arch_programas.readline(),/2/2/l_modulos = [],/2/3/while linea:,/4/4/modulo = os.path.basename(linea.rstrip()),/4/5/l_modulos.append(modulo.replace(".py"/c/ "")),/4/6/linea = arch_programas.readline(),/2/7/arch_programas.seek(0),/2/8/return l_modulos
generar_ordenado,(programas),ordenar,/2/1/es_principal = True,/2/2/l_archivos_entrada = [],/2/3/nombre_modulo = programas.readline().rstrip(),/2/4/while nombre_modulo:,/4/5/arch_original = open(nombre_modulo),/4/6/l_archivos_entrada.append(arch_original),/4/7/nombre_modulo = programas.readline().rstrip(),/2/8/funcion_principal = buscar_principal(l_archivos_entrada[0]),/2/9/for arch_entrada in l_archivos_entrada:,/4/10/dir_arch_salida = generar_dir(arch_entrada.name),/4/11/with open(dir_arch_salida/c/ "w") as arch_salida:,/6/12/l_funciones = generar_lista_funciones_ordenada(arch_entrada),/6/13/if es_principal:,/8/14/guardar_funciones_modulo(l_funciones/c/ arch_entrada/c/ arch_salida/c/ funcion_principal),/8/15/es_principal = False,/6/16/else:,/8/17/guardar_funciones_modulo(l_funciones/c/ arch_entrada/c/ arch_salida),/2/18/for arch in l_archivos_entrada:,/4/19/arch.close()
guardar_campo,(dato/c/ arch/c/ formateado = True/c/ nro_linea = None),generar_archivos_csv,/2/1/dato = dato.replace("/c/"/c/ COMA),/2/2/if formateado:,/4/3/cantidad_indentacion = calcular_indentacion(dato),/4/4/dato = dato.lstrip(" "),/4/5/arch.write(f"/c//{cantidad_indentacion}/{nro_linea}/{dato}"),/2/6/else:,/4/7/arch.write(f"/c/{dato}")
guardar_comentario_ayuda,(arch_entrada/c/ arch_comentarios),generar_archivos_csv,/2/1/linea = leer_centinela(arch_entrada),/2/2/autor = obtener_autor(linea),/2/3/guardar_campo(autor/c/ arch_comentarios/c/ formateado = False),/2/4/linea = leer_centinela(arch_entrada),/2/5/ayuda = obtener_comentario_ayuda(linea/c/ arch_entrada),/2/6/guardar_campo(ayuda/c/ arch_comentarios/c/ formateado = False),/2/7/return linea
guardar_comentarios,(firma_funcion/c/ arch_entrada/c/ arch_comentarios),generar_archivos_csv,/2/1/nombre_funcion = guardar_nombre_funcion(firma_funcion/c/ arch_comentarios),/2/2/linea = guardar_comentario_ayuda(arch_entrada/c/ arch_comentarios),/2/3/linea = guardar_comentarios_adicionales(linea/c/ arch_entrada/c/ arch_comentarios),/2/4/return linea
guardar_comentarios_adicionales,(linea/c/ arch_entrada/c/ arch_comentarios),generar_archivos_csv,/2/1/nro_linea = 0,/2/2/while linea != CENTINELA and not empieza_funcion(linea):,/4/3/if linea.lstrip().startswith("#"):,/6/4/guardar_campo(linea/c/ arch_comentarios/c/ formateado = True/c/ nro_linea = nro_linea),/4/5/elif empieza_comentario_multilinea(linea):,/6/6/comentario = obtener_comentario_multilinea(linea/c/ arch_entrada),/6/7/guardar_campo(comentario/c/ arch_comentarios/c/ formateado = True/c/ nro_linea = nro_linea),/4/8/else:,/6/9/linea_sin_comentarios = eliminar_comentario_linea(linea),/6/10/if linea != linea_sin_comentarios:,/8/11/pos_fin_instruccion = len(linea_sin_comentarios),/8/12/comentario = linea[pos_fin_instruccion:],/8/13/guardar_campo(comentario/c/ arch_comentarios/c/ formateado = True/c/ nro_linea = nro_linea),/4/14/linea = leer_centinela(arch_entrada),/4/15/nro_linea += 1,/2/16/return linea
guardar_fuente_unico,(firma_funcion/c/ arch_entrada/c/ arch_fuente_unico),generar_archivos_csv,/2/1/nombre_funcion = guardar_nombre_funcion(firma_funcion/c/ arch_fuente_unico),/2/2/parametros = obtener_parametros(firma_funcion),/2/3/guardar_campo(parametros/c/ arch_fuente_unico/c/ formateado = False),/2/4/nombre_modulo = obtener_nombre_arch(arch_entrada),/2/5/guardar_campo(nombre_modulo/c/ arch_fuente_unico/c/ formateado = False),/2/6/linea = guardar_instrucciones(arch_entrada/c/ arch_fuente_unico),/2/7/return linea
guardar_funciones_modulo,(l_funciones/c/ arch_entrada/c/ arch_salida/c/ funcion_principal = False),ordenar,/2/1/if funcion_principal:,/4/2/for funcion in l_funciones:,/6/3/es_main = True if funcion_principal in funcion else False,/6/4/copiar_funcion(funcion/c/ arch_entrada/c/ arch_salida/c/ es_main),/2/5/else:,/4/6/for funcion in l_funciones:,/6/7/copiar_funcion(funcion/c/ arch_entrada/c/ arch_salida)
guardar_imports_modulo,(dir_programa/c/ arch_imports/c/ l_modulos),manejo_imports,/2/1/arch_modulo = open(dir_programa),/2/2/dir_programa = os.path.basename(dir_programa),/2/3/arch_imports.write(dir_programa.replace(".py"/c/ "")),/2/4/linea_modulo = arch_modulo.readline(),/2/5/while linea_modulo:,/4/6/if linea_modulo.startswith("import "):,/6/7/modulo_importado = linea_modulo[7:].rstrip(),/6/8/if modulo_importado in l_modulos:,/8/9/generar_archivos_csv.guardar_campo(modulo_importado/c/ arch_imports/c/ formateado = False),/4/10/linea_modulo = arch_modulo.readline(),/2/11/arch_imports.write("\n"),/2/12/arch_modulo.close()
guardar_instrucciones,(arch_entrada/c/ arch_fuente_unico),generar_archivos_csv,/2/1/linea = leer_centinela(arch_entrada),/2/2/nro_linea = 0,/2/3/while linea != CENTINELA and not empieza_funcion(linea):,/4/4/if empieza_comentario_multilinea(linea):,/6/5/saltear_comentario_multilinea(linea/c/ arch_entrada),/4/6/elif es_instruccion(linea):,/6/7/linea = eliminar_comentario_linea(linea),/6/8/guardar_campo(linea/c/ arch_fuente_unico/c/ formateado = True/c/ nro_linea = nro_linea),/4/9/linea = leer_centinela(arch_entrada),/4/10/nro_linea += 1,/2/11/return linea
guardar_linea,(linea/c/ arch),ordenar,/2/1/if not linea.endswith("\n"):,/4/2/linea = linea + "\n",/2/3/linea = linea.replace("\t"/c/ " " * TAM_TABULACION),/2/4/linea = linea.replace(COMILLAS_SIMPLES/c/ COMILLAS_DOBLES),/2/5/arch.write(linea)
guardar_lista_funciones,(dir_programa/c/ arch_funciones),lista_funciones,/2/1/arch_modulo = open(dir_programa),/2/2/dir_programa = os.path.basename(dir_programa),/2/3/arch_funciones.write(dir_programa.replace(".txt"/c/ "")),/2/4/linea_modulo = arch_modulo.readline().rstrip(),/2/5/while linea_modulo:,/4/6/if generar_archivos_csv.empieza_funcion(linea_modulo):,/6/7/nombre_funcion = generar_archivos_csv.obtener_nombre_funcion(linea_modulo),/6/8/generar_archivos_csv.guardar_campo(nombre_funcion/c/ arch_funciones/c/ formateado = False),/4/9/linea_modulo = arch_modulo.readline().rstrip(),/2/10/arch_funciones.write("\n"),/2/11/arch_modulo.close()
guardar_nombre_funcion,(firma/c/ arch),generar_archivos_csv,/2/1/nombre_funcion = obtener_nombre_funcion(firma),/2/2/arch.write(nombre_funcion)
leer_centinela,(arch),generar_archivos_csv,/2/1/linea = arch.readline(),/2/2/return linea.rstrip() if linea else CENTINELA
leer_firmas,(l_archivos),generar_archivos_csv,/2/1/lineas = [],/2/2/for arch in l_archivos:,/4/3/linea = leer_centinela(arch),/4/4/lineas.append(linea),/2/5/return lineas
$main,(),programa_principal,/2/0/programas = open("programas.txt"),/2/1/preprocesamiento(programas),/2/2/opcion = mostrar_menu()
merge,(l_archivos/c/ modo),generar_archivos_csv,/2/1/reiniciar_pos_archivos(l_archivos),/2/2/if modo == "fuente_unico":,/4/3/arch_salida = open("fuente_unico.csv"/c/ "w"),/2/4/else: ,/4/5/arch_salida = open("comentarios.csv"/c/ "w"),/2/7/firmas = leer_firmas(l_archivos),/2/9/menor = nombre_menor(firmas),/2/11/while menor != CENTINELA:,/4/14/i = firmas.index(menor),/4/15/if modo == "fuente_unico":,/6/19/firmas[i] = guardar_fuente_unico(firmas[i]/c/ l_archivos[i]/c/ arch_salida),/4/20/else:,/6/24/firmas[i] = guardar_comentarios(firmas[i]/c/ l_archivos[i]/c/ arch_salida),/4/25/arch_salida.write("\n"),/4/27/menor = nombre_menor(firmas),/2/28/arch_salida.close()
mostrar_menu,(),programa_principal,/2/1/print("Trabajo Practico".center(100/c/ "_")),/2/2/print("Algoritmos y Programacion I".center(100/c/ "_")),/2/3/print("Grupo Ballenato".rjust(100/c/ " ")),/2/4/for linea in menu:,/4/5/print(linea),/2/6/opcion = input("Opcion: "),/2/7/return opcion
nombre_menor,(firmas),generar_archivos_csv,/2/1/menor = CENTINELA,/2/2/for firma in firmas:,/4/3/if firma.replace(MARCADOR_PRINC/c/ "") < menor.replace(MARCADOR_PRINC/c/ ""):,/6/4/menor = firma,/2/5/return menor
obtener_autor,(linea),generar_archivos_csv,/2/1/if "[Autor: " in linea:,/4/2/autor = linea[13:linea.index("]")],/2/3/else:,/4/4/autor = "Desconocido",/2/5/return autor
obtener_comentario_ayuda,(linea_inicio/c/ arch),generar_archivos_csv,/2/1/if "[Ayuda: " not in linea_inicio:,/4/2/ayuda = "",/2/3/elif "]" in linea_inicio:,/4/4/ayuda = linea_inicio[linea_inicio.index("[") + 1:linea_inicio.index("]")],/2/5/else: ,/4/6/ayuda = linea_inicio[linea_inicio.index("[") + 1:] + SALTO_LINEA,/4/7/linea = arch.readline().lstrip(),/4/8/while "]" not in linea:,/6/9/ayuda += linea.lstrip(),/6/10/linea = arch.readline(),/4/11/ayuda += linea.strip().replace("]"/c/ ""),/4/12/ayuda = ayuda.replace("\n"/c/ SALTO_LINEA).rstrip(COMILLAS_DOBLES),/2/13/return ayuda
obtener_comentario_multilinea,(linea/c/ arch),generar_archivos_csv,/2/1/if termina_comentario(linea):,/4/2/comentario = linea.strip(),/2/3/else:,/4/4/linea = linea.strip() + SALTO_LINEA,/4/5/comentario = linea,/4/6/linea = leer_centinela(arch),/4/7/while linea != CENTINELA and not termina_comentario(linea):,/6/8/comentario += linea.strip() + SALTO_LINEA,/6/9/linea = leer_centinela(arch),/4/10/if linea != CENTINELA:,/6/11/comentario += linea.strip(),/2/12/return comentario
obtener_datos_comentario_inicial,(arch),generar_archivos_csv,/2/1/linea = arch.readline(),/2/2/if "[Autor: " in linea:,/4/3/autor = linea[13:linea.index("]")],/2/4/else:,/4/5/autor = "Desconocido",/2/6/linea = arch.readline(),/2/7/if "[Ayuda: " in linea:,/4/8/ayuda = obtener_comentario_ayuda(linea/c/ arch),/2/9/else:,/4/10/ayuda = "",/2/11/return autor/c/ ayuda
obtener_nombre_arch,(arch),generar_archivos_csv,/2/1/nombre = os.path.basename(arch.name),/2/2/nombre = nombre.replace(".txt"/c/ ""),/2/3/return nombre
obtener_nombre_funcion,(firma),generar_archivos_csv,/2/1/nombre_funcion = firma[4: firma.index("(")],/2/2/return nombre_funcion
obtener_parametros,(firma),generar_archivos_csv,/2/1/parametros = firma[firma.find("("): firma.find(")") + 1],/2/2/return parametros
preprocesamiento,(programas),programa_principal,/2/1/ordenar.generar_ordenado(programas),/2/2/l_archivos = [],/2/3/l_modulos = os.listdir(CARPETA_FUNCIONES_ORDENADAS),/2/4/for modulo in l_modulos:,/4/5/dir_modulo = os.path.join(CARPETA_FUNCIONES_ORDENADAS/c/ modulo),/4/6/arch = open(dir_modulo),/4/7/l_archivos.append(arch),/2/8/generar_archivos_csv.merge(l_archivos/c/ "fuente_unico"),/2/9/generar_archivos_csv.merge(l_archivos/c/ "comentarios"),/2/10/manejo_imports.generar_lista_imports(programas),/2/11/lista_funciones.generar_lista_funciones(programas),/2/12/for arch in l_archivos:,/4/13/arch.close()
reiniciar_pos_archivos,(l_archivos),generar_archivos_csv,/2/1/for arch in l_archivos:,/4/2/arch.seek(0)
saltear_comentario_multilinea,(linea/c/ arch),generar_archivos_csv,/2/1/while linea != CENTINELA and not linea.endswith(COMILLAS_DOBLES):,/4/2/linea = leer_centinela(arch)
termina_comentario,(linea),generar_archivos_csv,/2/1/linea = linea.rstrip(),/2/2/if linea.endswith(COMILLAS_DOBLES):,/4/3/devolver = True,/2/4/else:,/4/5/devolver = False,/2/6/return devolver
termino_funcion,(linea),ordenar,/2/1/if linea.startswith("\t") or linea.startswith(" ") or linea == "\n":,/4/2/devolver = False,/2/3/else:,/4/4/devolver = True,/2/5/return devolver
